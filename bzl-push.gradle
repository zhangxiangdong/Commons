apply plugin: 'maven-publish'


// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {

        publications {
            // Creates a Maven publication called "debug".
            debug(MavenPublication) {
                // Applies the component for the release build variant.
                from components.debug

                groupId = 'com.github.zhangxiangdong'
                artifactId = 'commons'
                version = getVersionString()
            }
        }

        repositories {
            maven {
                name = 'myrepo'
                url = getRepositoryUrl()
            }
        }
    }
}

def getVersionString() {
    return loadProperties().getProperty("repo.version")
}

def getRepositoryUrl() {
    // 项目根目录新建 local.properties 文件
    // 添加 repo.uri 键值对。
    // 如，FileManager项目本地地址：repo.local=/Users/admin/StudioProjects/FileManager/.local
    return uri(loadProperties().getProperty("repo.uri", "/Users/admin/StudioProjects/FileManager/.local"))
}

def loadProperties() {
    Properties props = new Properties()
    props.load(project.rootProject.file("local.properties").newDataInputStream())
    props
}
